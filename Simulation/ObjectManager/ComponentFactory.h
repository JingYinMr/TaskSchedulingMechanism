#pragma once

#include<iostream>

#include "ComponentBase.h"

using namespace std;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	抽象组件工厂.	</summary>
///
/// <remarks>	朱连超, 2024/05/02.	</remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class ComponentFactoryBase
{
public:
	virtual std::shared_ptr<ComponentBase> CreateComponent() = 0;
	virtual ~ComponentFactoryBase();
};

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	任务组件工厂，用于创建任务组件.	</summary>
///
/// <remarks>	朱连超, 2024/05/02.	</remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class MissionComponentFactory : public ComponentFactoryBase
{
public:
	virtual std::shared_ptr<ComponentBase> CreateComponent();
	virtual ~MissionComponentFactory();
};

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	机动组件工厂，用于创建任务组件.	</summary>
///
/// <remarks>	朱连超, 2024/05/02.	</remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class MotionComponentFactory : public ComponentFactoryBase
{
public:
	virtual std::shared_ptr<ComponentBase> CreateComponent();
	virtual ~MotionComponentFactory();
};


#pragma once

#include<iostream>

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	组件基类.	</summary>
///
/// <remarks>	朱连超, 2024/04/30.	</remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class ComponentBase
{
public:
	virtual ~ComponentBase();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	用于实现组件的深拷贝.	</summary>
	///
	/// <remarks>	朱连超, 2024/05/08.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual virtual std::shared_ptr<ComponentBase> clone() const = 0;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	write or read ComponentType.	</summary>
	///
	/// <remarks>	朱连超, 2024/04/30.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetComponentType(size_t componenttype);
	size_t GetComponentType();

private:
	/// <summary> 组件类型  </summary>
	size_t ComponentType;
};


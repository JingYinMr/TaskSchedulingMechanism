#pragma once

#include<iostream>
#include<list>

#include "MissionComponentBase.h"

using namespace std;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	任务组件，作为树节点，叶子结点为具体任务，比方说打击，侦察任务.	</summary>
///
/// <remarks>	朱连超, 2024/05/01.	</remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class MissionComponent :
	public MissionComponentBase
{
public:
	virtual ~MissionComponent();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	添加叶子结点.	</summary>
	///
	/// <remarks>	朱连超, 2024/04/29.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void AddNode(std::shared_ptr<MissionComponentBase> elements);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	删除叶子结点.	</summary>
	///
	/// <remarks>	朱连超, 2024/04/29.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void RemoveNode(std::shared_ptr<MissionComponentBase> elements);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	核心接口.	</summary>
	///
	/// <remarks>	朱连超, 2024/04/29.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void PerformTasks();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	用于实现组件的深拷贝.	</summary>
	///
	/// <remarks>	朱连超, 2024/05/08.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual std::shared_ptr<ComponentBase> clone() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取任务组件中的任务.	</summary>
	///
	/// <remarks>	朱连超, 2024/05/08.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	list<std::shared_ptr<MissionComponentBase>> GetelementsList();

private:
	/// <summary>	管理任务树型结构.	</summary>
	list<std::shared_ptr<MissionComponentBase>> elementsList;
};

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	侦察任务，作为叶子节点.	</summary>
///
/// <remarks>	朱连超, 2024/05/01.	</remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class ReconnaissanceMission : public MissionComponentBase
{
public:
	virtual ~ReconnaissanceMission();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	核心接口.	</summary>
	///
	/// <remarks>	朱连超, 2024/04/29.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void PerformTasks();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	用于实现组件的深拷贝.	</summary>
	///
	/// <remarks>	朱连超, 2024/05/08.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual virtual std::shared_ptr<ComponentBase> clone() const;

};

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	打击任务，作为叶子节点.	</summary>
///
/// <remarks>	朱连超, 2024/05/01.	</remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class AttackMission : public MissionComponentBase
{
public:
	virtual ~AttackMission();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	核心接口.	</summary>
	///
	/// <remarks>	朱连超, 2024/04/29.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void PerformTasks();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	用于实现组件的深拷贝.	</summary>
	///
	/// <remarks>	朱连超, 2024/05/08.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual virtual std::shared_ptr<ComponentBase> clone() const;
};

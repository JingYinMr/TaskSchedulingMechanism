#pragma once

#include<iostream>
#include<list>

#include "MotionComponentBase.h"

using namespace std;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	机动组件，作为树节点，叶子结点为固定翼机动，直升机机动.	</summary>
///
/// <remarks>	朱连超, 2024/05/03.	</remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class MotionComponent :
	public MotionComponentBase
{
public:
	virtual ~MotionComponent();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	添加叶子结点.	</summary>
	///
	/// <remarks>	朱连超, 2024/04/29.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void AddNode(std::shared_ptr<MotionComponentBase> elements);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	删除叶子结点.	</summary>
	///
	/// <remarks>	朱连超, 2024/04/29.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void RemoveNode(std::shared_ptr<MotionComponentBase> elements);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	核心接口.	</summary>
	///
	/// <remarks>	朱连超, 2024/04/29.	</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void Motion();

private:
	/// <summary>	管理任务树型结构.	</summary>
	list<std::shared_ptr<MotionComponentBase>> elementsList;
};

